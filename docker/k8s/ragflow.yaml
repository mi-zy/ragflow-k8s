# k8s-node08： failed to get sandbox image:  ctr -n=k8s.io images import pause.tar 或者按以下处理
# vim /etc/containerd/config.toml    sandbox_image = "core.harbor.domain/mizy/pause:3.7"

apiVersion: apps/v1
kind: Deployment
metadata:
  name: ragflow-server
  namespace: ragflow
  labels:
    container_name: ragflow-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ragflow
  template:
    metadata:
      labels:
        app: ragflow
    spec:
      containers:
      - name: ragflow
        image: core.harbor.domain/mizy/ragflow:dev     
        # command: ["sleep", "3600"]
        imagePullPolicy: IfNotPresent
        securityContext:   
          privileged: true                   
        resources:
          requests:
            cpu: "8000m" 
            memory: "24Gi"
          limits:
            cpu: "16000m"
            memory: "32Gi"   
        env:
        - name: HF_ENDPOINT
          value: "https://hf-mirror.com"
#   表示当前运行的系统是 macOS:  if os.environ.get("MACOS")获取环境变量MACOS的值:      
        - name: MACOS
          value: "macOS"                
        - name: TZ
          value: "Asia/Shanghai"                         
        ports:
        - name: svc 
          containerPort: 9380
        - name: web
          containerPort: 80    
        - name: https
          containerPort: 443            
        volumeMounts:
        - name: ragflow-service
          mountPath: /ragflow/conf/service_conf.yaml
          subPath: service_conf.yaml
        - name: ragflow-ragflow 
          mountPath: /etc/nginx/conf.d/ragflow.conf
          subPath: ragflow.conf
        - name: ragflow-proxy
          mountPath: /etc/nginx/proxy.conf 
          subPath: proxy.conf         
        - name: ragflow-nginx
          mountPath: /etc/nginx/nginx.conf  
          subPath: nginx.conf         
        - name: volume-log
          mountPath: /ragflow/logs         
      volumes:
        - name: ragflow-service
          configMap:
            name: ragflow-service
            defaultMode: 0777
        - name: ragflow-nginx
          configMap:
            name: ragflow-nginx    
        - name: ragflow-proxy
          configMap:
            name: ragflow-proxy
        - name: ragflow-ragflow 
          configMap:
            name: ragflow-ragflow 
        - name: volume-log
          emptyDir: { }              

---
# apiVersion: v1
# kind: Service
# metadata:
  # name: ragflow
  # namespace: ragflow  
# spec:
  # selector:
    # app: ragflow
  # ports: 
    # - name: server1 
      # port: 9380
      # targetPort: 9380
    # - name: server2 
      # port: 80
      # targetPort: 80     
    # - name: server3 
      # port: 443
      # targetPort: 443
  # type: ClusterIP   

  
---  
  
 # k -n ragflow create configmap ragflow-service --from-file=service_conf.yaml=/home/ragflow/ragflow/conf/service_conf.yaml
 # k -n ragflow create configmap ragflow-nginx --from-file=nginx.conf=/home/ragflow/ragflow/docker/nginx/nginx.conf
 # k -n ragflow create configmap ragflow-proxy --from-file=proxy.conf=/home/ragflow/ragflow/docker/nginx/proxy.conf
 # k -n ragflow create configmap ragflow-ragflow --from-file=ragflow.conf=/home/ragflow/ragflow/docker/nginx/ragflow.conf

